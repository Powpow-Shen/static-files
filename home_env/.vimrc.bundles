" Modeline and Notes {
" vim: set foldmarker={,} foldlevel=0 foldmethod=marker spell:
"
"   This is the personal .vimrc.bundles file inspired by Steve Francia(http://spf13.com).
" }

" Environment {
    " Basics {
        set nocompatible        " must be first line
        set background=dark     " Assume a dark background
    " }

    " Windows Compatible {
        " On Windows, also use '.vim' instead of 'vimfiles'; this makes synchronization
        " across (heterogeneous) systems easier.
        if has('win32') || has('win64')
          set runtimepath=$HOME/.vim,$VIM/vimfiles,$VIMRUNTIME,$VIM/vimfiles/after,$HOME/.vim/after
        endif
    " }
    "
    " Setup Bundle Support {
    " The next three lines ensure that the ~/.vim/bundle/ system works
        filetype off
        set rtp+=~/.vim/bundle/vundle
        call vundle#rc()
    " }

" }

" Bundles {
    " Deps
        Bundle 'gmarik/vundle'
        if executable('ack-grep')
            let g:ackprg="ack-grep -H --nocolor --nogroup --column"
            Bundle 'mileszs/ack.vim'
        elseif executable('ack')
            Bundle 'mileszs/ack.vim'
        elseif executable('ag')
            Bundle 'mileszs/ack.vim'
            let g:ackprg = 'ag --nogroup --nocolor --column'
        endif

    " list only the plugin groups you will use
    if !exists('g:bundle_groups')
        let g:bundle_groups=['general', 'snipmate', 'programming', 'javascript', 'misc']
    endif

    " General
        if count(g:bundle_groups, 'general')
            Bundle 'vim-scripts/The-NERD-tree'
            Bundle 'altercation/vim-colors-solarized'
            Bundle 'kien/ctrlp.vim'
            Bundle 'vim-scripts/matchit.zip'
            Bundle 'bling/vim-airline'
            Bundle 'vim-scripts/CSApprox'
            Bundle 'jistr/vim-nerdtree-tabs'
            Bundle 'vim-scripts/Indent-Guides'
        endif

    " General Programming
        if count(g:bundle_groups, 'programming')
            Bundle 'vim-scripts/checksyntax-B'
            Bundle 'vim-scripts/EasyGrep'
            Bundle 'vim-scripts/DirDiff.vim'
            if executable('ctags')
                Bundle 'vim-scripts/Tagbar'
                Bundle 'vim-scripts/SrcExpl'
            endif
        endif

    " Snippets & AutoComplete
        if count(g:bundle_groups, 'snipmate')
            Bundle 'vim-scripts/snipMate'
            Bundle 'ervandew/supertab'
        endif

    " Javascript
        if count(g:bundle_groups, 'javascript')
            Bundle 'marijnh/tern_for_vim'
        endif

    " HTML
        if count(g:bundle_groups, 'html')
            Bundle 'amirh/HTML-AutoCloseTag'
            Bundle 'hail2u/vim-css3-syntax'
        endif

    " Misc
        if count(g:bundle_groups, 'misc')
            Bundle 'tpope/vim-fugitive'
        endif
" }

" General {
    " set autowrite                  " automatically write a file when leaving a modified buffer
    set shortmess+=filmnrxoOtT      " abbrev. of messages (avoids 'hit enter')
" }


" Modeline and Notes {
"   This is the personal .vimrc.bundles file inspired by Steve Francia(http://spf13.com).
"   Before using bundles, you need to install neobundle first: 
"   curl https://raw.githubusercontent.com/Shougo/neobundle.vim/master/bin/install.sh | sh
" }

" Environment {

    " General {
        set shortmess+=filmnrxoOtT      " abbrev. of messages (avoids 'hit enter')
    " }
    
    " Setup NeoBundle Support {
    " The next three lines ensure that the ~/.vim/bundle/ system works
        filetype off
        set rtp+=~/.vim/bundle/neobundle.vim
        call neobundle#begin(expand('~/.vim/bundle/'))
        NeoBundleFetch 'Shougo/neobundle.vim'
    " }

" }

" Bundles {

    " list only the plugin groups you will use
    if !exists('g:bundle_groups')
        let g:bundle_groups=['general', 'programming', 'snipmate', 'javascript', 'html', 'misc']
    endif

    " General
        if count(g:bundle_groups, 'general')
            NeoBundle 'vim-scripts/The-NERD-tree'
            NeoBundle 'altercation/vim-colors-solarized'
            NeoBundle 'vim-scripts/matchit.zip'
            NeoBundle 'bling/vim-airline'
            NeoBundle 'jistr/vim-nerdtree-tabs'
            NeoBundle 'vim-scripts/Indent-Guides'
        endif

    " General Programming
        if count(g:bundle_groups, 'programming')
            NeoBundle 'Shougo/unite.vim'
            NeoBundle 'Shougo/vimproc.vim', {
            \ 'build' : {
            \     'windows' : 'tools\\update-dll-mingw',
            \     'cygwin' : 'make -f make_cygwin.mak',
            \     'mac' : 'make -f make_mac.mak',
            \     'linux' : 'make',
            \     'unix' : 'gmake',
            \    },
            \ }
            NeoBundle 'vim-scripts/EasyGrep'
            NeoBundle 'junegunn/fzf'
            NeoBundle 'scrooloose/syntastic'
            NeoBundle 'vim-scripts/DirDiff.vim'
            if executable('ctags')
                NeoBundle 'vim-scripts/Tagbar'
                NeoBundle 'vim-scripts/SrcExpl'
            endif
        endif

    " Snippets & AutoComplete
        if count(g:bundle_groups, 'snipmate')
            NeoBundle 'vim-scripts/snipMate'
            NeoBundle 'ervandew/supertab'
        endif

    " Javascript
        if count(g:bundle_groups, 'javascript')
            NeoBundle 'maksimr/vim-jsbeautify'
            if executable('npm')
            NeoBundle 'marijnh/tern_for_vim', {
            \ 'build': {
            \     'windows' : 'npm install',
            \     'cygwin' : 'npm install',
            \     'mac' : 'npm install',
            \     'unix' : 'npm install',
            \    },
            \ }
          endif
        endif

    " HTML
        if count(g:bundle_groups, 'html')
            NeoBundle 'amirh/HTML-AutoCloseTag'
            NeoBundle 'hail2u/vim-css3-syntax'
        endif

    " Misc
        if count(g:bundle_groups, 'misc')
        endif
    
" End Bundle Support
call neobundle#end()
" If there are uninstalled bundles found on startup,
" this will conveniently prompt you to install them.
NeoBundleCheck
" }

